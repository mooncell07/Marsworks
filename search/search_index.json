{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome! + Marsworks is an Async. Python API Wrapper around NASA's Mars Rover Photos API with 100% API coverage. Currently this project is under development and possibilities of breaking changes in near future is huge until 1.x release. Getting Started + Installation: + pip install -U marsworks Usage: + #Lets get images using sols. import asyncio from marsworks import Client client = Client () async def main ( rover_name , sol ) -> list : images = await client . get_photo_by_sol ( rover_name , sol ) #You can pass camera too. return images imgs = asyncio . run ( main ( \"Curiosity\" , 956 )) print ( imgs [ 0 ] . img_src ) print ( imgs [ 0 ] . photo_id ) #and many more! #Lets get some mission manifest. import asyncio from marsworks import Client , Manifest client = Client () async def main ( rover_name ) -> Manifest : mfest = await client . get_mission_manifest ( rover_name ) return mfest mfst = asyncio . run ( main ( \"Spirit\" )) print ( mfst . landing_date ) print ( mfst . status ) #and more!","title":"Home"},{"location":"#welcome","text":"Marsworks is an Async. Python API Wrapper around NASA's Mars Rover Photos API with 100% API coverage. Currently this project is under development and possibilities of breaking changes in near future is huge until 1.x release.","title":"Welcome!"},{"location":"#getting-started","text":"","title":"Getting Started"},{"location":"#installation","text":"pip install -U marsworks","title":"Installation:"},{"location":"#usage","text":"#Lets get images using sols. import asyncio from marsworks import Client client = Client () async def main ( rover_name , sol ) -> list : images = await client . get_photo_by_sol ( rover_name , sol ) #You can pass camera too. return images imgs = asyncio . run ( main ( \"Curiosity\" , 956 )) print ( imgs [ 0 ] . img_src ) print ( imgs [ 0 ] . photo_id ) #and many more! #Lets get some mission manifest. import asyncio from marsworks import Client , Manifest client = Client () async def main ( rover_name ) -> Manifest : mfest = await client . get_mission_manifest ( rover_name ) return mfest mfst = asyncio . run ( main ( \"Spirit\" )) print ( mfst . landing_date ) print ( mfst . status ) #and more!","title":"Usage:"},{"location":"changelog/","text":"v0.3.0 + Changes : Adds await Client.get_latest_photo() and Photo.parse_img_src() . choices is now enums . Now all await Client.get_x take a page argument. Now python 3.7 and above are supported. Now await Client.get_photo_by_earthdate() 's earth_date param takes either datetime.date object or string in YYYY-MM-DD form. Exceptions are now docummented. Adds BadArgumentError.expected and BadArgumentError.got Fixed some typos in docs and fixed examples.","title":"Changelog"},{"location":"changelog/#v030","text":"Changes : Adds await Client.get_latest_photo() and Photo.parse_img_src() . choices is now enums . Now all await Client.get_x take a page argument. Now python 3.7 and above are supported. Now await Client.get_photo_by_earthdate() 's earth_date param takes either datetime.date object or string in YYYY-MM-DD form. Exceptions are now docummented. Adds BadArgumentError.expected and BadArgumentError.got Fixed some typos in docs and fixed examples.","title":"v0.3.0"},{"location":"API-Reference/client/","text":"__init__ ( self , * , api_key = None , session = None , suppress_warnings = False ) special + Client Constructor. Parameters: Name Type Description Default api_key Optional[str] NASA API key . (optional) None session Optional[httpx.AsyncClient] An AsyncClient object. (optional) None suppress_warnings bool Whether to suppress warnings. False close ( self ) async + Closes the AsyncClient. Warning It can close user given AsyncClient session too. get_latest_photo ( self , name , * , camera = None , page = None ) async + Gets the latest photos taken by this rover. Parameters: Name Type Description Default name Union[str, marsworks.origin.enums.Rover] Name of rover. required camera Optional[str] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Note name can be an enum of Rover . Note camera can be an enum of Camera . Returns: Type Description list A list of Photo objects with url and info. Introduced in v0.3.0 . get_mission_manifest ( self , name ) async + Gets the mission manifest of this rover. Parameters: Name Type Description Default name Union[str, marsworks.origin.enums.Rover] Name of rover. required Note name can be an enum of Rover . Returns: Type Description Manifest A Manifest object containing mission's info. get_photo_by_earthdate ( self , name , earth_date , * , camera = None , page = None ) async + Gets the photos taken by this rover on this date. Parameters: Name Type Description Default name Union[str, marsworks.origin.enums.Rover] Name of rover. required earth_date Union[str, datetime.date] A datetime.date object or date in string form in YYYY-MM-DD format. required camera Optional[str] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Note name can be an enum of Rover . Note camera can be an enum of Camera . Returns: Type Description list A list of Photo objects with url and info. get_photo_by_sol ( self , name , sol , * , camera = None , page = None ) async + Gets the photos taken by this rover on this sol. Parameters: Name Type Description Default name Union[str, marsworks.origin.enums.Rover] Name of rover. required sol Union[int, str] The sol when photo was captured. required camera Optional[str] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Note name can be an enum of Rover . Note camera can be an enum of Camera . Returns: Type Description list A list of Photo objects with url and info. read ( self , photo ) async + Reads the bytes of image url in photo. Parameters: Name Type Description Default photo Photo The Photo object whose image url is to be read. required Returns: Type Description BytesIO A BytesIO object. save ( self , photo , fp ) async + Saves the image of Photo object. Parameters: Name Type Description Default photo Photo The Photo object whose image is to be saved. required fp Union[str, bytes, os.PathLike, io.BufferedIOBase] The file path (with name and extension) where the image has to be saved. required Returns: Type Description int Number of bytes written.","title":"Client"},{"location":"API-Reference/client/#marsworks.client.Client.__init__","text":"Client Constructor. Parameters: Name Type Description Default api_key Optional[str] NASA API key . (optional) None session Optional[httpx.AsyncClient] An AsyncClient object. (optional) None suppress_warnings bool Whether to suppress warnings. False","title":"__init__()"},{"location":"API-Reference/client/#marsworks.client.Client.close","text":"Closes the AsyncClient. Warning It can close user given AsyncClient session too.","title":"close()"},{"location":"API-Reference/client/#marsworks.client.Client.get_latest_photo","text":"Gets the latest photos taken by this rover. Parameters: Name Type Description Default name Union[str, marsworks.origin.enums.Rover] Name of rover. required camera Optional[str] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Note name can be an enum of Rover . Note camera can be an enum of Camera . Returns: Type Description list A list of Photo objects with url and info. Introduced in v0.3.0 .","title":"get_latest_photo()"},{"location":"API-Reference/client/#marsworks.client.Client.get_mission_manifest","text":"Gets the mission manifest of this rover. Parameters: Name Type Description Default name Union[str, marsworks.origin.enums.Rover] Name of rover. required Note name can be an enum of Rover . Returns: Type Description Manifest A Manifest object containing mission's info.","title":"get_mission_manifest()"},{"location":"API-Reference/client/#marsworks.client.Client.get_photo_by_earthdate","text":"Gets the photos taken by this rover on this date. Parameters: Name Type Description Default name Union[str, marsworks.origin.enums.Rover] Name of rover. required earth_date Union[str, datetime.date] A datetime.date object or date in string form in YYYY-MM-DD format. required camera Optional[str] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Note name can be an enum of Rover . Note camera can be an enum of Camera . Returns: Type Description list A list of Photo objects with url and info.","title":"get_photo_by_earthdate()"},{"location":"API-Reference/client/#marsworks.client.Client.get_photo_by_sol","text":"Gets the photos taken by this rover on this sol. Parameters: Name Type Description Default name Union[str, marsworks.origin.enums.Rover] Name of rover. required sol Union[int, str] The sol when photo was captured. required camera Optional[str] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Note name can be an enum of Rover . Note camera can be an enum of Camera . Returns: Type Description list A list of Photo objects with url and info.","title":"get_photo_by_sol()"},{"location":"API-Reference/client/#marsworks.client.Client.read","text":"Reads the bytes of image url in photo. Parameters: Name Type Description Default photo Photo The Photo object whose image url is to be read. required Returns: Type Description BytesIO A BytesIO object.","title":"read()"},{"location":"API-Reference/client/#marsworks.client.Client.save","text":"Saves the image of Photo object. Parameters: Name Type Description Default photo Photo The Photo object whose image is to be saved. required fp Union[str, bytes, os.PathLike, io.BufferedIOBase] The file path (with name and extension) where the image has to be saved. required Returns: Type Description int Number of bytes written.","title":"save()"},{"location":"API-Reference/exceptions/","text":"BadArgumentError + Raised when bad values are supplied to any method. Attributes: Name Type Description expected str The type of arg this method expected. got str The type of arg this method got. BadContentError + Raised when API returns bad or malformed content. BadStatusCodeError + Raised when a bad status code is recieved. Attributes: Name Type Description reason str The reason phrase of status. status int The status code of response. ContentTypeError + Raised when content recieved is neither application/json nor image/jpeg. Attributes: Name Type Description content_type str The content type API returned. MarsworksError + Base class for all marsworks exceptions. Attributes: Name Type Description error str The error message.","title":"Exceptions"},{"location":"API-Reference/exceptions/#marsworks.origin.exceptions.exceptions.BadArgumentError","text":"Raised when bad values are supplied to any method. Attributes: Name Type Description expected str The type of arg this method expected. got str The type of arg this method got.","title":"BadArgumentError"},{"location":"API-Reference/exceptions/#marsworks.origin.exceptions.exceptions.BadContentError","text":"Raised when API returns bad or malformed content.","title":"BadContentError"},{"location":"API-Reference/exceptions/#marsworks.origin.exceptions.exceptions.BadStatusCodeError","text":"Raised when a bad status code is recieved. Attributes: Name Type Description reason str The reason phrase of status. status int The status code of response.","title":"BadStatusCodeError"},{"location":"API-Reference/exceptions/#marsworks.origin.exceptions.exceptions.ContentTypeError","text":"Raised when content recieved is neither application/json nor image/jpeg. Attributes: Name Type Description content_type str The content type API returned.","title":"ContentTypeError"},{"location":"API-Reference/exceptions/#marsworks.origin.exceptions.exceptions.MarsworksError","text":"Base class for all marsworks exceptions. Attributes: Name Type Description error str The error message.","title":"MarsworksError"},{"location":"API-Reference/manifest/","text":"A class representing a Manifest . Attributes: Name Type Description rover_id int ID of the rover. name str Name of the Rover. status str The Rover's mission status. max_sol int The most recent Martian sol from which photos exist. total_photos int Number of photos taken by that Rover. cameras dict Cameras for which there are photos by that Rover on that sol. landing_date : date property readonly + The Rover's landing date on Mars. Returns: Type Description date A datetime.date object. launch_date : date property readonly + The Rover's launch date from Earth. Returns: Type Description date A datetime.date object. max_date : date property readonly + The most recent Earth date from which photos exist. Returns: Type Description date A datetime.date object. __hash__ ( self ) special + Returns: Type Description int hash of the class. __repr__ ( self ) special + Returns: Type Description str Representation of Manifest. __str__ ( self ) special + Returns: Type Description str Name of the Rover. search_camera ( self , camera ) + Looks for the camera supplied. Parameters: Name Type Description Default camera str The camera to look for. (Must be in Upper case and short name. like: PANCAM ) required Returns: Type Description list list of cameras with that name.","title":"Manifest"},{"location":"API-Reference/manifest/#marsworks.manifest.Manifest.landing_date","text":"The Rover's landing date on Mars. Returns: Type Description date A datetime.date object.","title":"landing_date"},{"location":"API-Reference/manifest/#marsworks.manifest.Manifest.launch_date","text":"The Rover's launch date from Earth. Returns: Type Description date A datetime.date object.","title":"launch_date"},{"location":"API-Reference/manifest/#marsworks.manifest.Manifest.max_date","text":"The most recent Earth date from which photos exist. Returns: Type Description date A datetime.date object.","title":"max_date"},{"location":"API-Reference/manifest/#marsworks.manifest.Manifest.__hash__","text":"Returns: Type Description int hash of the class.","title":"__hash__()"},{"location":"API-Reference/manifest/#marsworks.manifest.Manifest.__repr__","text":"Returns: Type Description str Representation of Manifest.","title":"__repr__()"},{"location":"API-Reference/manifest/#marsworks.manifest.Manifest.__str__","text":"Returns: Type Description str Name of the Rover.","title":"__str__()"},{"location":"API-Reference/manifest/#marsworks.manifest.Manifest.search_camera","text":"Looks for the camera supplied. Parameters: Name Type Description Default camera str The camera to look for. (Must be in Upper case and short name. like: PANCAM ) required Returns: Type Description list list of cameras with that name.","title":"search_camera()"},{"location":"API-Reference/photo/","text":"A class representing a Photo . Attributes: Name Type Description photo_id int ID of the photo. sol int Sol when the photo was taken. img_src str Image url. camera_full_name : Optional [ str ] property readonly + Full-Name of camera with which photo was taken. Returns: Type Description Optional[str] The full-name as a string. camera_id : Optional [ int ] property readonly + ID of camera with which photo was taken. Returns: Type Description Optional[int] The id as an integer. camera_name : Optional [ str ] property readonly + Name of camera with which photo was taken. Returns: Type Description Optional[str] The name as a string. camera_rover_id : Optional [ int ] property readonly + Rover id on which this camera is present. Returns: Type Description Optional[int] The rover id as an integer. rover_id : Optional [ int ] property readonly + Similar to camera_rover_id . Returns: Type Description Optional[int] The rover id as an integer. rover_landing_date : Optional [ datetime . date ] property readonly + The Rover's landing date on Mars. Returns: Type Description Optional[datetime.date] A datetime.date object. rover_launch_date : Optional [ datetime . date ] property readonly + The Rover's launch date from Earth. Returns: Type Description Optional[datetime.date] A datetime.date object. rover_name : Optional [ str ] property readonly + Name of rover which took the photo. Returns: Type Description Optional[str] The name as a string. rover_status : Optional [ str ] property readonly + The Rover's mission status. Returns: Type Description Optional[str] The rover's mission status as string. __eq__ ( self , value ) special + Checks if two objects are same using photo_id. Returns: Type Description bool result of o==o . __hash__ ( self ) special + Returns: Type Description int hash of the class. __len__ ( self ) special + Returns: Type Description int length of internal dict of attributes. __repr__ ( self ) special + Returns: Type Description str Representation of Photo. __str__ ( self ) special + Returns: Type Description str url of image. parse_img_src ( self ) + Parses the image URL. Returns: Type Description ParseResult A ParseResult -like object. Introduced in v0.3.0 .","title":"Photo"},{"location":"API-Reference/photo/#marsworks.photo.Photo.camera_full_name","text":"Full-Name of camera with which photo was taken. Returns: Type Description Optional[str] The full-name as a string.","title":"camera_full_name"},{"location":"API-Reference/photo/#marsworks.photo.Photo.camera_id","text":"ID of camera with which photo was taken. Returns: Type Description Optional[int] The id as an integer.","title":"camera_id"},{"location":"API-Reference/photo/#marsworks.photo.Photo.camera_name","text":"Name of camera with which photo was taken. Returns: Type Description Optional[str] The name as a string.","title":"camera_name"},{"location":"API-Reference/photo/#marsworks.photo.Photo.camera_rover_id","text":"Rover id on which this camera is present. Returns: Type Description Optional[int] The rover id as an integer.","title":"camera_rover_id"},{"location":"API-Reference/photo/#marsworks.photo.Photo.rover_id","text":"Similar to camera_rover_id . Returns: Type Description Optional[int] The rover id as an integer.","title":"rover_id"},{"location":"API-Reference/photo/#marsworks.photo.Photo.rover_landing_date","text":"The Rover's landing date on Mars. Returns: Type Description Optional[datetime.date] A datetime.date object.","title":"rover_landing_date"},{"location":"API-Reference/photo/#marsworks.photo.Photo.rover_launch_date","text":"The Rover's launch date from Earth. Returns: Type Description Optional[datetime.date] A datetime.date object.","title":"rover_launch_date"},{"location":"API-Reference/photo/#marsworks.photo.Photo.rover_name","text":"Name of rover which took the photo. Returns: Type Description Optional[str] The name as a string.","title":"rover_name"},{"location":"API-Reference/photo/#marsworks.photo.Photo.rover_status","text":"The Rover's mission status. Returns: Type Description Optional[str] The rover's mission status as string.","title":"rover_status"},{"location":"API-Reference/photo/#marsworks.photo.Photo.__eq__","text":"Checks if two objects are same using photo_id. Returns: Type Description bool result of o==o .","title":"__eq__()"},{"location":"API-Reference/photo/#marsworks.photo.Photo.__hash__","text":"Returns: Type Description int hash of the class.","title":"__hash__()"},{"location":"API-Reference/photo/#marsworks.photo.Photo.__len__","text":"Returns: Type Description int length of internal dict of attributes.","title":"__len__()"},{"location":"API-Reference/photo/#marsworks.photo.Photo.__repr__","text":"Returns: Type Description str Representation of Photo.","title":"__repr__()"},{"location":"API-Reference/photo/#marsworks.photo.Photo.__str__","text":"Returns: Type Description str url of image.","title":"__str__()"},{"location":"API-Reference/photo/#marsworks.photo.Photo.parse_img_src","text":"Parses the image URL. Returns: Type Description ParseResult A ParseResult -like object. Introduced in v0.3.0 .","title":"parse_img_src()"},{"location":"API-Reference/Enums/camera/","text":"An Enum class. Name Value Description Curiosity Opportunity Spirit FHAZ FHAZ Front Hazard Avoidance Camera \u2714 \u2714 \u2714 RHAZ RHAZ Rear Hazard Avoidance Camera \u2714 \u2714 \u2714 MAST MAST Mast Camera \u2714 CHEMCAM CHEMCAM Chemistry and Camera Complex \u2714 MAHLI MAHLI Mars Hand Lens Imager \u2714 MARDI MARDI Mars Descent Imager \u2714 NAVCAM NAVCAM Navigation Camera \u2714 \u2714 \u2714 PANCAM PANCAM Panoramic Camera \u2714 \u2714 MINITES MINITES Miniature Thermal Emission Spectrometer (Mini-TES) \u2714 \u2714","title":"Camera"},{"location":"API-Reference/Enums/rover/","text":"An Enum class. Name Value Description CURIOSITY CURIOSITY Mars Science Laboratory mission, Curiosity. OPPORTUNITY OPPORTUNITY Mars Exploration Rover \u2013 B, Opportunity. SPIRIT SPIRIT Mars Exploration Rover \u2013 A, Spirit.","title":"Rover"}]}