{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome ! + Hi! Welcome to my repository Marsworks! (Name inspired from fate franchise ofc ;) ). So, Marsworks is a fast and lightweight API wrapper around Mars Rover Photos API written in Python. Let's see why you should or shouldn't use this wrapper in next sections. Advantages + Sync & Async support with Async utilizing async-await syntax. Fast, lightweight; and memory optimized. Provides API request handling at really low as well as high level. 100% API coverage. Pagination supported. Minimal dependency of just 1 for both sync & async support. Disadvantages + No Caching. No Ratelimit handling or request quering. Not well tested. Currently this project is under development and possibilities of breaking changes in near future is huge until 1.x release. Getting Started + Installation + pip install -U marsworks or python -m pip install -U git+https://github.com/mooncell07/Marsworks.git Usage + Async. usage + Getting photos on a particular sol taken by this rover, asynchronously. + import asyncio import marsworks client = marsworks . AsyncClient () async def main ( rover_name , sol ) -> list : images = await client . get_photo_by_sol ( rover_name , sol ) # You can pass camera too. return images imgs = asyncio . run ( main ( \"Curiosity\" , 956 )) print ( imgs [ 0 ] . img_src ) print ( imgs [ 0 ] . photo_id ) # and many more attributes! Sync. usage + Getting photos on a particular sol taken by this rover, synchronously. + import marsworks client = marsworks . SyncClient () def main ( rover_name , sol ) -> list : images = client . get_photo_by_sol ( rover_name , sol ) # You can pass camera too. return images imgs = main ( \"Curiosity\" , 956 ) print ( imgs [ 0 ] . img_src ) print ( imgs [ 0 ] . photo_id ) # and many more attributes! Links + Marsworks Github Repo . + Marsworks PyPi Page . + NASA APIs Page . + Thanks to Andy for his contribution. +","title":"Home"},{"location":"#welcome","text":"Hi! Welcome to my repository Marsworks! (Name inspired from fate franchise ofc ;) ). So, Marsworks is a fast and lightweight API wrapper around Mars Rover Photos API written in Python. Let's see why you should or shouldn't use this wrapper in next sections.","title":"Welcome!"},{"location":"#advantages","text":"Sync & Async support with Async utilizing async-await syntax. Fast, lightweight; and memory optimized. Provides API request handling at really low as well as high level. 100% API coverage. Pagination supported. Minimal dependency of just 1 for both sync & async support.","title":"Advantages"},{"location":"#disadvantages","text":"No Caching. No Ratelimit handling or request quering. Not well tested. Currently this project is under development and possibilities of breaking changes in near future is huge until 1.x release.","title":"Disadvantages"},{"location":"#getting-started","text":"","title":"Getting Started"},{"location":"#installation","text":"pip install -U marsworks or python -m pip install -U git+https://github.com/mooncell07/Marsworks.git","title":"Installation"},{"location":"#usage","text":"","title":"Usage"},{"location":"#async-usage","text":"","title":"Async. usage"},{"location":"#getting-photos-on-a-particular-sol-taken-by-this-rover-asynchronously","text":"import asyncio import marsworks client = marsworks . AsyncClient () async def main ( rover_name , sol ) -> list : images = await client . get_photo_by_sol ( rover_name , sol ) # You can pass camera too. return images imgs = asyncio . run ( main ( \"Curiosity\" , 956 )) print ( imgs [ 0 ] . img_src ) print ( imgs [ 0 ] . photo_id ) # and many more attributes!","title":"Getting photos on a particular sol taken by this rover, asynchronously."},{"location":"#sync-usage","text":"","title":"Sync. usage"},{"location":"#getting-photos-on-a-particular-sol-taken-by-this-rover-synchronously","text":"import marsworks client = marsworks . SyncClient () def main ( rover_name , sol ) -> list : images = client . get_photo_by_sol ( rover_name , sol ) # You can pass camera too. return images imgs = main ( \"Curiosity\" , 956 ) print ( imgs [ 0 ] . img_src ) print ( imgs [ 0 ] . photo_id ) # and many more attributes!","title":"Getting photos on a particular sol taken by this rover, synchronously."},{"location":"#links","text":"","title":"Links"},{"location":"#marsworks-github-repo","text":"","title":"Marsworks Github Repo."},{"location":"#marsworks-pypi-page","text":"","title":"Marsworks PyPi Page."},{"location":"#nasa-apis-page","text":"","title":"NASA APIs Page."},{"location":"#thanks-to-andy-for-his-contribution","text":"","title":"Thanks to Andy for his contribution."},{"location":"changelog/","text":"v0.7.0 + Changes: marsworks.Client renamed to marsworks.AsyncClient . marsworks.AlterClient renamed to marsworks.SyncClient . Removed AsyncClient.save() and AsyncClient.read() . Fixed Typehints. Removed Manifest.__hash__() and Photo.__hash__() . Removed Manifest.search_camera() . Fixed Photo.read() , Photo.save() , Photo.aread() , Photo.asave() . v0.6.3 + Changes: Fixed README on PYPI. v0.6.1 + No changes. (I had to delete v0.6.0 from PyPi due to some reason) v0.6.0 + Not available, install 0.6.1 instead. Changes: 0.5.3 Adds __len__ dunder to Manifest . Adds some warnings in docs and new question to FAQ. 0.5.2 Rewrites README and docs. landing page. Adds Photo.read() and Photo.save() . AlterClient is now documented. Adds AlterClient.get_raw_response() . 0.5.1 Client now has an alias: AsyncClient . Fixes TypeError bug in await Client.get_photo_by_earthdate() and await Client.get_latest_photo() . Adds AlterClient.get_mission_status() , AlterClient.get_photo_by_sol() , AlterClient.get_photo_by_earthdate() , AlterClient.get_latest_photo() , AlterClient.close() . Adds AlterClient (alias: SyncClient ) for synchronous HTTP requesting. v0.5.0 + Changes: 0.4.3 rover_name , status , rover_id , rover_landing_date , rover_launch_date are moved from Photo to PartialManifest . Added rover property to Photo . It returns PartialManifest . Adds PartialManifest class. Now all public repr s of marsworks have attribute value represented as well. 0.4.2 Beautifies docstrings for hint bubble in many text editors. Fixes Serializer.photo_content() . Now it doesn't return empty list. 0.4.1 helpers.lookup() now returns first element which meets the predicate. Use filter() to achieve what it could do before. Fixed some typehints and docstrings. Adds await Photo.read() and await Photo.save() . Deprecates await Client.read() and await Client.save() . Deprecates BadArgumentError . v0.4.0 + Changes: 0.3.4 Adds FAQ page in Documentation. All Client methods which accept camera param can now send UserWarning when an invalid camera is passed. They can be suppressed with marsworks.Client(suppress_warnings=True) . await Client.save() and await Client.read() are now Pending Deprecated. They will be Deprecated in 0.5.0 and removed in 1.0.0. The replacement will be proposed in 0.5.0. 0.3.3 helpers.Page is now a dataclass. Serializer.manifest_content() and Serializer.photo_content() . are no more awaitable. BadContentError Can be raised in Serializer.photo_content(...) . 0.3.2 Adds await Client.get_raw_response() . Serializer class is now partially public. await Client.get_raw_response() returns this object. Serializer is now documented. 0.3.1 Adds Rover.perseverance and all the Camera enums of Perseverance. There are too many so haven't listed here. Adds helper module, this module has some helper methods to help in working with data. Currently helper.lookup() and helper.mw_pageit() are only added. v0.3.0 + Changes: Adds await Client.get_latest_photo() and Photo.parse_img_src() . choices is now enums . Now all await Client.get_x take a page argument. Now python 3.7 and above are supported. Now await Client.get_photo_by_earthdate() 's earth_date param takes either datetime.date object or string in YYYY-MM-DD form. Exceptions are now documented. Adds BadArgumentError.expected and BadArgumentError.got . Fixed some typos in docs and fixed examples.","title":"Changelog"},{"location":"changelog/#v070","text":"Changes: marsworks.Client renamed to marsworks.AsyncClient . marsworks.AlterClient renamed to marsworks.SyncClient . Removed AsyncClient.save() and AsyncClient.read() . Fixed Typehints. Removed Manifest.__hash__() and Photo.__hash__() . Removed Manifest.search_camera() . Fixed Photo.read() , Photo.save() , Photo.aread() , Photo.asave() .","title":"v0.7.0"},{"location":"changelog/#v063","text":"Changes: Fixed README on PYPI.","title":"v0.6.3"},{"location":"changelog/#v061","text":"No changes. (I had to delete v0.6.0 from PyPi due to some reason)","title":"v0.6.1"},{"location":"changelog/#v060","text":"Not available, install 0.6.1 instead. Changes: 0.5.3 Adds __len__ dunder to Manifest . Adds some warnings in docs and new question to FAQ. 0.5.2 Rewrites README and docs. landing page. Adds Photo.read() and Photo.save() . AlterClient is now documented. Adds AlterClient.get_raw_response() . 0.5.1 Client now has an alias: AsyncClient . Fixes TypeError bug in await Client.get_photo_by_earthdate() and await Client.get_latest_photo() . Adds AlterClient.get_mission_status() , AlterClient.get_photo_by_sol() , AlterClient.get_photo_by_earthdate() , AlterClient.get_latest_photo() , AlterClient.close() . Adds AlterClient (alias: SyncClient ) for synchronous HTTP requesting.","title":"v0.6.0"},{"location":"changelog/#v050","text":"Changes: 0.4.3 rover_name , status , rover_id , rover_landing_date , rover_launch_date are moved from Photo to PartialManifest . Added rover property to Photo . It returns PartialManifest . Adds PartialManifest class. Now all public repr s of marsworks have attribute value represented as well. 0.4.2 Beautifies docstrings for hint bubble in many text editors. Fixes Serializer.photo_content() . Now it doesn't return empty list. 0.4.1 helpers.lookup() now returns first element which meets the predicate. Use filter() to achieve what it could do before. Fixed some typehints and docstrings. Adds await Photo.read() and await Photo.save() . Deprecates await Client.read() and await Client.save() . Deprecates BadArgumentError .","title":"v0.5.0"},{"location":"changelog/#v040","text":"Changes: 0.3.4 Adds FAQ page in Documentation. All Client methods which accept camera param can now send UserWarning when an invalid camera is passed. They can be suppressed with marsworks.Client(suppress_warnings=True) . await Client.save() and await Client.read() are now Pending Deprecated. They will be Deprecated in 0.5.0 and removed in 1.0.0. The replacement will be proposed in 0.5.0. 0.3.3 helpers.Page is now a dataclass. Serializer.manifest_content() and Serializer.photo_content() . are no more awaitable. BadContentError Can be raised in Serializer.photo_content(...) . 0.3.2 Adds await Client.get_raw_response() . Serializer class is now partially public. await Client.get_raw_response() returns this object. Serializer is now documented. 0.3.1 Adds Rover.perseverance and all the Camera enums of Perseverance. There are too many so haven't listed here. Adds helper module, this module has some helper methods to help in working with data. Currently helper.lookup() and helper.mw_pageit() are only added.","title":"v0.4.0"},{"location":"changelog/#v030","text":"Changes: Adds await Client.get_latest_photo() and Photo.parse_img_src() . choices is now enums . Now all await Client.get_x take a page argument. Now python 3.7 and above are supported. Now await Client.get_photo_by_earthdate() 's earth_date param takes either datetime.date object or string in YYYY-MM-DD form. Exceptions are now documented. Adds BadArgumentError.expected and BadArgumentError.got . Fixed some typos in docs and fixed examples.","title":"v0.3.0"},{"location":"faq/","text":"Here are some Frequently Asked Questions. + (Which are not frequently asked ofc) Q1 ) Will there be a sync. release? + Ans ) Yes. Sync release will be proposed in v0.6.0 and it won't require any other dependency since httpx has async and sync support both. Added in 0.6.0 . Q2 ) Does it support Paginantion? + Ans ) Yes. It supports basic Paginantion the API provides. Marsworks also provides its own paginantion function for more complicated Paginantion. Which is helpers.mw_pageit . Q3 ) Is this Wrapper by NASA? + Ans ) No. This wrapper is made by me and its mine. As of now at least ;) Q4 ) Can i contribute to Marsworks repo? + Ans ) Sure! Q5 ) Will there be breaking changes in near future? + Ans ) Breaking Changes will be proposed until 1.x release but i can say that they might not be any big even in 0.x releases because most of the wrapper is completed. Q6 ) Why can't i use Photo.save() or Photo.read() in coroutine functions? + Ans ) You must not use these two methods in a coroutine function because these two are not coroutines and will read or (read and) save the image synchronously. (yeah, they will block.) Apart from this, due to the wrapper's design, if you ran these in a coro. func. then they will even create an uncloseable httpx.Client() no matter if you have passed httpx.AsyncClient() or anything. Use await Photo.aread() and await Photo.asave() instead. Q7 ) Why am i getting x error or warning? + i ) Unclosed <httpx.AsyncClient object at 0xsome_memory_location> + Sample: UserWarning : Unclosed < httpx . AsyncClient object at 0x00000278666EF5B0 >. See https : // www . python - httpx . org / async / #opening-and-closing-clients for details. Ans ) This is because the AsyncClient session which the wrapper is using is not closed. It is recommended to use await AsyncClient.close() or use the context manager. It is recommended to close it only when your purpose for using the session is over. As httpx.AsyncClient session can be reused. It can close user given httpx.AsyncClient session too. ii ) UserWarning: Using DEMO_KEY for api call. Please use your api key. + Sample: UserWarning : Using DEMO_KEY for api call . Please use your api key . Ans ) This warning is sent by the wrapper when API call is being made using DEMO_KEY due to some reason. (Mainly because the user has not passed their NASA API key). This can be solved either by passing your own API-key in marswork.Client or by suppressing warnings by passing suppress_warnings=True in marsworks.AsyncClient() or marsworks.SyncClient() . It is recommended to use your own API key as it has higher X-Ratelimit-Remaining. iii ) UserWarning: Invalid value was passed for camera. Making request without camera. + Sample: UserWarning : Invalid value was passed for camera . Making request without camera . Ans This warning is sent when an invalid camera is passed to camera param of a Client method as stated in the warning. camera only accepts either string name of an enum of Camera (not case sensitive) or the enum itself. As stated in the warning, the camera param will not be included in the API request if its invalid. iv ) ValueError: SOMETHING is not a valid Rover + Sample: ValueError : 'XYZ' is not a valid Rover Ans ) This error is raised when you have passed an invalid argument to name parameter of a Client method. The arg(s) you have passed were neither an enum of Rover nor string name of any enum. You can pass an enum itself too like await AsyncClient.get_mission_manifest(Rover.SPIRIT) .","title":"FAQ"},{"location":"faq/#here-are-some-frequently-asked-questions","text":"(Which are not frequently asked ofc)","title":"Here are some Frequently Asked Questions."},{"location":"faq/#q1-will-there-be-a-sync-release","text":"Ans ) Yes. Sync release will be proposed in v0.6.0 and it won't require any other dependency since httpx has async and sync support both. Added in 0.6.0 .","title":"Q1) Will there be a sync. release?"},{"location":"faq/#q2-does-it-support-paginantion","text":"Ans ) Yes. It supports basic Paginantion the API provides. Marsworks also provides its own paginantion function for more complicated Paginantion. Which is helpers.mw_pageit .","title":"Q2) Does it support Paginantion?"},{"location":"faq/#q3-is-this-wrapper-by-nasa","text":"Ans ) No. This wrapper is made by me and its mine. As of now at least ;)","title":"Q3) Is this Wrapper by NASA?"},{"location":"faq/#q4-can-i-contribute-to-marsworks-repo","text":"Ans ) Sure!","title":"Q4) Can i contribute to Marsworks repo?"},{"location":"faq/#q5-will-there-be-breaking-changes-in-near-future","text":"Ans ) Breaking Changes will be proposed until 1.x release but i can say that they might not be any big even in 0.x releases because most of the wrapper is completed.","title":"Q5) Will there be breaking changes in near future?"},{"location":"faq/#q6-why-cant-i-use-photosave-or-photoread-in-coroutine-functions","text":"Ans ) You must not use these two methods in a coroutine function because these two are not coroutines and will read or (read and) save the image synchronously. (yeah, they will block.) Apart from this, due to the wrapper's design, if you ran these in a coro. func. then they will even create an uncloseable httpx.Client() no matter if you have passed httpx.AsyncClient() or anything. Use await Photo.aread() and await Photo.asave() instead.","title":"Q6) Why can't i use Photo.save() or Photo.read() in coroutine functions?"},{"location":"faq/#q7-why-am-i-getting-x-error-or-warning","text":"","title":"Q7) Why am i getting x error or warning?"},{"location":"faq/#i-unclosed-httpxasyncclient-object-at-0xsome_memory_location","text":"Sample: UserWarning : Unclosed < httpx . AsyncClient object at 0x00000278666EF5B0 >. See https : // www . python - httpx . org / async / #opening-and-closing-clients for details. Ans ) This is because the AsyncClient session which the wrapper is using is not closed. It is recommended to use await AsyncClient.close() or use the context manager. It is recommended to close it only when your purpose for using the session is over. As httpx.AsyncClient session can be reused. It can close user given httpx.AsyncClient session too.","title":"i) Unclosed &lt;httpx.AsyncClient object at 0xsome_memory_location&gt;"},{"location":"faq/#ii-userwarning-using-demo_key-for-api-call-please-use-your-api-key","text":"Sample: UserWarning : Using DEMO_KEY for api call . Please use your api key . Ans ) This warning is sent by the wrapper when API call is being made using DEMO_KEY due to some reason. (Mainly because the user has not passed their NASA API key). This can be solved either by passing your own API-key in marswork.Client or by suppressing warnings by passing suppress_warnings=True in marsworks.AsyncClient() or marsworks.SyncClient() . It is recommended to use your own API key as it has higher X-Ratelimit-Remaining.","title":"ii) UserWarning: Using DEMO_KEY for api call. Please use your api key."},{"location":"faq/#iii-userwarning-invalid-value-was-passed-for-camera-making-request-without-camera","text":"Sample: UserWarning : Invalid value was passed for camera . Making request without camera . Ans This warning is sent when an invalid camera is passed to camera param of a Client method as stated in the warning. camera only accepts either string name of an enum of Camera (not case sensitive) or the enum itself. As stated in the warning, the camera param will not be included in the API request if its invalid.","title":"iii) UserWarning: Invalid value was passed for camera. Making request without camera."},{"location":"faq/#iv-valueerror-something-is-not-a-valid-rover","text":"Sample: ValueError : 'XYZ' is not a valid Rover Ans ) This error is raised when you have passed an invalid argument to name parameter of a Client method. The arg(s) you have passed were neither an enum of Rover nor string name of any enum. You can pass an enum itself too like await AsyncClient.get_mission_manifest(Rover.SPIRIT) .","title":"iv) ValueError: SOMETHING is not a valid Rover"},{"location":"API-Reference/asyncclient/","text":"__init__ ( self , * , api_key = None , session = None , suppress_warnings = False ) special + Client Constructor. A sync. alternative is available as well. SyncClient . Parameters: Name Type Description Default api_key Optional[str] NASA API key . (optional) None session Optional[httpx.AsyncClient] An AsyncClient object. (optional) None suppress_warnings bool Whether to suppress warnings or not. False Info When api_key is not passed or it is DEMO_KEY a warning is sent. To suppress it suppress_warnings must be set to True explicitly. Hint For name and camera param. of this class's instance methods you can pass enums Rover and Camera . You can also pass args as string. close ( self ) async + Closes the AsyncClient. Warning It can close user given AsyncClient session too. get_latest_photo ( self , name , * , camera = None , page = None ) async + Gets the latest photos taken by this rover. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required camera Optional[Union[Camera, str]] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Returns: Type Description Optional[List[Photo]] A list of Photo objects with url and info. Introduced in v0.3.0 . get_mission_manifest ( self , name ) async + Gets the mission manifest of this rover. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required Returns: Type Description Optional[Manifest] A Manifest object containing mission's info. get_photo_by_earthdate ( self , name , earth_date , * , camera = None , page = None ) async + Gets the photos taken by this rover on this date. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required earth_date Union[str, datetime.date] A datetime.date object or date in string form in YYYY-MM-DD format. required camera Optional[Union[Camera, str]] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Returns: Type Description Optional[List[Photo]] A list of Photo objects with url and info. get_photo_by_sol ( self , name , sol , * , camera = None , page = None ) async + Gets the photos taken by this rover on this sol. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required sol Union[int, str] The sol when photo was captured. required camera Optional[Union[Camera, str]] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Returns: Type Description Optional[List[Photo]] A list of Photo objects with url and info. get_raw_response ( self , path , ** queries ) async + Gets a Serializer containing Response of request made to API using path and queries . Parameters: Name Type Description Default path str The url path. required queries Any The endpoint to which call is to be made. {} Returns: Type Description Optional[Serializer] A Serializer object. Introduced in v0.4.0 .","title":"AsyncClient"},{"location":"API-Reference/asyncclient/#marsworks.asyncclient.AsyncClient.__init__","text":"Client Constructor. A sync. alternative is available as well. SyncClient . Parameters: Name Type Description Default api_key Optional[str] NASA API key . (optional) None session Optional[httpx.AsyncClient] An AsyncClient object. (optional) None suppress_warnings bool Whether to suppress warnings or not. False Info When api_key is not passed or it is DEMO_KEY a warning is sent. To suppress it suppress_warnings must be set to True explicitly. Hint For name and camera param. of this class's instance methods you can pass enums Rover and Camera . You can also pass args as string.","title":"__init__()"},{"location":"API-Reference/asyncclient/#marsworks.asyncclient.AsyncClient.close","text":"Closes the AsyncClient. Warning It can close user given AsyncClient session too.","title":"close()"},{"location":"API-Reference/asyncclient/#marsworks.asyncclient.AsyncClient.get_latest_photo","text":"Gets the latest photos taken by this rover. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required camera Optional[Union[Camera, str]] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Returns: Type Description Optional[List[Photo]] A list of Photo objects with url and info. Introduced in v0.3.0 .","title":"get_latest_photo()"},{"location":"API-Reference/asyncclient/#marsworks.asyncclient.AsyncClient.get_mission_manifest","text":"Gets the mission manifest of this rover. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required Returns: Type Description Optional[Manifest] A Manifest object containing mission's info.","title":"get_mission_manifest()"},{"location":"API-Reference/asyncclient/#marsworks.asyncclient.AsyncClient.get_photo_by_earthdate","text":"Gets the photos taken by this rover on this date. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required earth_date Union[str, datetime.date] A datetime.date object or date in string form in YYYY-MM-DD format. required camera Optional[Union[Camera, str]] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Returns: Type Description Optional[List[Photo]] A list of Photo objects with url and info.","title":"get_photo_by_earthdate()"},{"location":"API-Reference/asyncclient/#marsworks.asyncclient.AsyncClient.get_photo_by_sol","text":"Gets the photos taken by this rover on this sol. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required sol Union[int, str] The sol when photo was captured. required camera Optional[Union[Camera, str]] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Returns: Type Description Optional[List[Photo]] A list of Photo objects with url and info.","title":"get_photo_by_sol()"},{"location":"API-Reference/asyncclient/#marsworks.asyncclient.AsyncClient.get_raw_response","text":"Gets a Serializer containing Response of request made to API using path and queries . Parameters: Name Type Description Default path str The url path. required queries Any The endpoint to which call is to be made. {} Returns: Type Description Optional[Serializer] A Serializer object. Introduced in v0.4.0 .","title":"get_raw_response()"},{"location":"API-Reference/exceptions/","text":"BadArgumentError + Raised when bad values are supplied to any method. Attributes: Name Type Description expected str The type of arg this method expected. got str The type of arg this method got. Silently Deprecated in 0.5.0 . BadContentError + Raised when API returns bad or malformed content. BadStatusCodeError + Raised when a bad status code is recieved. Attributes: Name Type Description reason str The reason phrase of status. status int The status code of response. ContentTypeError + Raised when content recieved is neither application/json nor image/jpeg. Attributes: Name Type Description content_type str The content type API returned. MarsworksError + Base class for all marsworks exceptions. Attributes: Name Type Description error str The error message.","title":"Exceptions"},{"location":"API-Reference/exceptions/#marsworks.origin.exceptions.exceptions.BadArgumentError","text":"Raised when bad values are supplied to any method. Attributes: Name Type Description expected str The type of arg this method expected. got str The type of arg this method got. Silently Deprecated in 0.5.0 .","title":"BadArgumentError"},{"location":"API-Reference/exceptions/#marsworks.origin.exceptions.exceptions.BadContentError","text":"Raised when API returns bad or malformed content.","title":"BadContentError"},{"location":"API-Reference/exceptions/#marsworks.origin.exceptions.exceptions.BadStatusCodeError","text":"Raised when a bad status code is recieved. Attributes: Name Type Description reason str The reason phrase of status. status int The status code of response.","title":"BadStatusCodeError"},{"location":"API-Reference/exceptions/#marsworks.origin.exceptions.exceptions.ContentTypeError","text":"Raised when content recieved is neither application/json nor image/jpeg. Attributes: Name Type Description content_type str The content type API returned.","title":"ContentTypeError"},{"location":"API-Reference/exceptions/#marsworks.origin.exceptions.exceptions.MarsworksError","text":"Base class for all marsworks exceptions. Attributes: Name Type Description error str The error message.","title":"MarsworksError"},{"location":"API-Reference/helpers/","text":"Page dataclass + A data class representing a Page. Attributes: Name Type Description pages list A list of objects whose length is specified with per_page param of helpers.mw_pageit() lookup ( predicate , iterable ) + Performs a lookup over the iterable and returns first value which meets the predicate. Parameters: Name Type Description Default predicate Callable The callable which must be called on all elements of iterable. required iterable Iterable The iterable. required Returns: Type Description Optional[Any] First element which meets the predicate or None if no element meets the predicate. Examples: print ( lookup ( lambda p : p . camera_id == 30 , listofphotos )) Introduced in v0.4.0 . mw_pageit ( mwlist , per_page , no_of_pages ) + Divides the mwlist into per_page number of dataclass helpers.Page s. Parameters: Name Type Description Default mwlist list The list to be divided into pages. required per_page int The number of items per page. required no_of_pages int Number of pages to return. required Returns: Type Description Generator[marsworks.helpers.Page, NoneType, NoneType] A generator of helpers.Page s. Introduced in v0.4.0 .","title":"Helpers"},{"location":"API-Reference/helpers/#marsworks.helpers.Page","text":"A data class representing a Page. Attributes: Name Type Description pages list A list of objects whose length is specified with per_page param of helpers.mw_pageit()","title":"Page"},{"location":"API-Reference/helpers/#marsworks.helpers.lookup","text":"Performs a lookup over the iterable and returns first value which meets the predicate. Parameters: Name Type Description Default predicate Callable The callable which must be called on all elements of iterable. required iterable Iterable The iterable. required Returns: Type Description Optional[Any] First element which meets the predicate or None if no element meets the predicate. Examples: print ( lookup ( lambda p : p . camera_id == 30 , listofphotos )) Introduced in v0.4.0 .","title":"lookup()"},{"location":"API-Reference/helpers/#marsworks.helpers.mw_pageit","text":"Divides the mwlist into per_page number of dataclass helpers.Page s. Parameters: Name Type Description Default mwlist list The list to be divided into pages. required per_page int The number of items per page. required no_of_pages int Number of pages to return. required Returns: Type Description Generator[marsworks.helpers.Page, NoneType, NoneType] A generator of helpers.Page s. Introduced in v0.4.0 .","title":"mw_pageit()"},{"location":"API-Reference/manifest/","text":"A class representing a Manifest . Attributes: Name Type Description rover_id Optional[int] ID of the rover. rover_name str Name of the Rover. status Optional[str] The Rover's mission status. max_sol Optional[int] The most recent Martian sol from which photos exist. total_photos Optiona[int] Number of photos taken by that Rover. cameras Mapping[str, str] Cameras for which there are photos by that Rover on that sol. max_date : date property readonly + The most recent Earth date from which photos exist. Returns: Type Description date A datetime.date object.","title":"Manifest"},{"location":"API-Reference/manifest/#marsworks.manifest.Manifest.max_date","text":"The most recent Earth date from which photos exist. Returns: Type Description date A datetime.date object.","title":"max_date"},{"location":"API-Reference/partialmanifest/","text":"A class representing a PartialManifest . Attributes: Name Type Description rover_name str Name of rover which took the photo. status Optional[str] The Rover's mission status. rover_id Optional[int] The Rover's id. landing_date : Optional [ datetime . date ] property readonly + The Rover's landing date on Mars. Returns: Type Description Optional[datetime.date] A datetime.date object. launch_date : Optional [ datetime . date ] property readonly + The Rover's launch date from Earth. Returns: Type Description Optional[datetime.date] A datetime.date object. __eq__ ( self , value ) special + Checks if two objects are same using rover_id . Returns: Type Description bool Result of obj == obj . __len__ ( self ) special + Returns: Type Description int length of internal dict of attributes. (Result of len(obj) ) __repr__ ( self ) special + Returns: Type Description str Representation of Photo. (Result of repr(obj) ) __str__ ( self ) special + Returns: Type Description str Name of the rover. (Result of str(obj) )","title":"PartialManifest"},{"location":"API-Reference/partialmanifest/#marsworks.partialmanifest.PartialManifest.landing_date","text":"The Rover's landing date on Mars. Returns: Type Description Optional[datetime.date] A datetime.date object.","title":"landing_date"},{"location":"API-Reference/partialmanifest/#marsworks.partialmanifest.PartialManifest.launch_date","text":"The Rover's launch date from Earth. Returns: Type Description Optional[datetime.date] A datetime.date object.","title":"launch_date"},{"location":"API-Reference/partialmanifest/#marsworks.partialmanifest.PartialManifest.__eq__","text":"Checks if two objects are same using rover_id . Returns: Type Description bool Result of obj == obj .","title":"__eq__()"},{"location":"API-Reference/partialmanifest/#marsworks.partialmanifest.PartialManifest.__len__","text":"Returns: Type Description int length of internal dict of attributes. (Result of len(obj) )","title":"__len__()"},{"location":"API-Reference/partialmanifest/#marsworks.partialmanifest.PartialManifest.__repr__","text":"Returns: Type Description str Representation of Photo. (Result of repr(obj) )","title":"__repr__()"},{"location":"API-Reference/partialmanifest/#marsworks.partialmanifest.PartialManifest.__str__","text":"Returns: Type Description str Name of the rover. (Result of str(obj) )","title":"__str__()"},{"location":"API-Reference/photo/","text":"A class representing a Photo . Attributes: Name Type Description photo_id Optional[int] ID of the photo. sol Optional[int] Sol when the photo was taken. img_src str Image url. Defaults to medium size for Curiosity, Opportunity, camera_full_name : Optional [ str ] property readonly + Full-Name of camera with which photo was taken. Returns: Type Description Optional[str] The full-name as a string. camera_id : Optional [ int ] property readonly + ID of camera with which photo was taken. Returns: Type Description Optional[int] The id as an integer. camera_name : Optional [ str ] property readonly + Name of camera with which photo was taken. Returns: Type Description Optional[str] The name as a string. camera_rover_id : Optional [ int ] property readonly + Rover id on which this camera is present. Returns: Type Description Optional[int] The rover id as an integer. rover : PartialManifest property readonly + A PartialManifest object contatning some mission manifest of the rover. Returns: Type Description PartialManifest A PartialManifest object. __eq__ ( self , value ) special + Checks if two objects are same using photo_id . Returns: Type Description bool Result of obj == obj . __len__ ( self ) special + Returns: Type Description int length of internal dict of attributes. (Result of len(obj) ) __repr__ ( self ) special + Returns: Type Description str Representation of Photo. (Result of repr(obj) ) __str__ ( self ) special + Returns: Type Description str url of image. (Result of str(obj) ) aread ( self ) async + Reads the bytes of image asynchronously. Returns: Type Description Optional[_io.BytesIO] A BytesIO object. Introduced in v0.5.0 . asave ( self , fp ) async + Saves the image asynchronously. Parameters: Name Type Description Default fp Union[str, bytes, os.PathLike, io.BufferedIOBase] The file path (with name and extension) where the image has to be saved. required Returns: Type Description Optional[int] Number of bytes written. Introduced in v0.5.0 . parse_img_src ( self ) + Parses the image URL. Returns: Type Description ParseResult A ParseResult -like object. Introduced in v0.3.0 . read ( self ) + Reads the bytes of image. Returns: Type Description Optional[_io.BytesIO] A BytesIO object. Warning Do NOT use this inside a coroutine function. Check this question . Introduced in v0.6.0 . save ( self , fp ) + Saves the image. Parameters: Name Type Description Default fp Union[str, bytes, os.PathLike, io.BufferedIOBase] The file path (with name and extension) where the image has to be saved. required Returns: Type Description Optional[int] Number of bytes written. Introduced in v0.6.0 .","title":"Photo"},{"location":"API-Reference/photo/#marsworks.photo.Photo.camera_full_name","text":"Full-Name of camera with which photo was taken. Returns: Type Description Optional[str] The full-name as a string.","title":"camera_full_name"},{"location":"API-Reference/photo/#marsworks.photo.Photo.camera_id","text":"ID of camera with which photo was taken. Returns: Type Description Optional[int] The id as an integer.","title":"camera_id"},{"location":"API-Reference/photo/#marsworks.photo.Photo.camera_name","text":"Name of camera with which photo was taken. Returns: Type Description Optional[str] The name as a string.","title":"camera_name"},{"location":"API-Reference/photo/#marsworks.photo.Photo.camera_rover_id","text":"Rover id on which this camera is present. Returns: Type Description Optional[int] The rover id as an integer.","title":"camera_rover_id"},{"location":"API-Reference/photo/#marsworks.photo.Photo.rover","text":"A PartialManifest object contatning some mission manifest of the rover. Returns: Type Description PartialManifest A PartialManifest object.","title":"rover"},{"location":"API-Reference/photo/#marsworks.photo.Photo.__eq__","text":"Checks if two objects are same using photo_id . Returns: Type Description bool Result of obj == obj .","title":"__eq__()"},{"location":"API-Reference/photo/#marsworks.photo.Photo.__len__","text":"Returns: Type Description int length of internal dict of attributes. (Result of len(obj) )","title":"__len__()"},{"location":"API-Reference/photo/#marsworks.photo.Photo.__repr__","text":"Returns: Type Description str Representation of Photo. (Result of repr(obj) )","title":"__repr__()"},{"location":"API-Reference/photo/#marsworks.photo.Photo.__str__","text":"Returns: Type Description str url of image. (Result of str(obj) )","title":"__str__()"},{"location":"API-Reference/photo/#marsworks.photo.Photo.aread","text":"Reads the bytes of image asynchronously. Returns: Type Description Optional[_io.BytesIO] A BytesIO object. Introduced in v0.5.0 .","title":"aread()"},{"location":"API-Reference/photo/#marsworks.photo.Photo.asave","text":"Saves the image asynchronously. Parameters: Name Type Description Default fp Union[str, bytes, os.PathLike, io.BufferedIOBase] The file path (with name and extension) where the image has to be saved. required Returns: Type Description Optional[int] Number of bytes written. Introduced in v0.5.0 .","title":"asave()"},{"location":"API-Reference/photo/#marsworks.photo.Photo.parse_img_src","text":"Parses the image URL. Returns: Type Description ParseResult A ParseResult -like object. Introduced in v0.3.0 .","title":"parse_img_src()"},{"location":"API-Reference/photo/#marsworks.photo.Photo.read","text":"Reads the bytes of image. Returns: Type Description Optional[_io.BytesIO] A BytesIO object. Warning Do NOT use this inside a coroutine function. Check this question . Introduced in v0.6.0 .","title":"read()"},{"location":"API-Reference/photo/#marsworks.photo.Photo.save","text":"Saves the image. Parameters: Name Type Description Default fp Union[str, bytes, os.PathLike, io.BufferedIOBase] The file path (with name and extension) where the image has to be saved. required Returns: Type Description Optional[int] Number of bytes written. Introduced in v0.6.0 .","title":"save()"},{"location":"API-Reference/serializer/","text":"A class representing a Serializer, used for serializing response into other objects. Attributes: Name Type Description response httpx.Response The response API returned. Warning This object is not for public use unless await Client.get_raw_response() is being used. __repr__ ( self ) special + Returns: Type Description str Representation of Serializer. (Result of repr(obj) ) manifest_content ( self ) + Serializes into Manifest . Returns: Type Description Optional[marsworks.Manifest] A Manifest object containing mission's info. photo_content ( self , session ) + Serializes into a list of Photo . Returns: Type Description List[marsworks.Photo] A list of Photo objects with url and info.","title":"Serializer"},{"location":"API-Reference/serializer/#marsworks.origin.serializer.Serializer.__repr__","text":"Returns: Type Description str Representation of Serializer. (Result of repr(obj) )","title":"__repr__()"},{"location":"API-Reference/serializer/#marsworks.origin.serializer.Serializer.manifest_content","text":"Serializes into Manifest . Returns: Type Description Optional[marsworks.Manifest] A Manifest object containing mission's info.","title":"manifest_content()"},{"location":"API-Reference/serializer/#marsworks.origin.serializer.Serializer.photo_content","text":"Serializes into a list of Photo . Returns: Type Description List[marsworks.Photo] A list of Photo objects with url and info.","title":"photo_content()"},{"location":"API-Reference/syncclient/","text":"__init__ ( self , * , api_key = None , session = None , suppress_warnings = False ) special + SyncClient Constructor. Use AsyncClient for async requests. Parameters: Name Type Description Default api_key Optional[str] NASA API key . (optional) None session Optional[httpx.Client] A Client object. (optional) None suppress_warnings bool Whether to suppress warnings. False Info When api_key is not passed or it is DEMO_KEY a warning is sent. To suppress it suppress_warnings must be set to True explicitly. Hint For name and camera param. of this class's instance methods you can pass enums Rover and Camera . You can also pass args as string. close ( self ) + Closes the SyncClient. Warning It can close user given Client session too. get_latest_photo ( self , name , * , camera = None , page = None ) + Gets the latest photos taken by this rover. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required camera Optional[Union[Camera, str]] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Returns: Type Description Optional[List[Photo]] A list of Photo objects with url and info. get_mission_manifest ( self , name ) + Gets the mission manifest of this rover. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required Returns: Type Description Optional[Manifest] A Manifest object containing mission's info. get_photo_by_earthdate ( self , name , earth_date , * , camera = None , page = None ) + Gets the photos taken by this rover on this date. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required earth_date Union[str, datetime.date] A datetime.date object or date in string form in YYYY-MM-DD format. required camera Optional[Union[Camera, str]] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Returns: Type Description Optional[List[Photo]] A list of Photo objects with url and info. get_photo_by_sol ( self , name , sol , * , camera = None , page = None ) + Gets the photos taken by this rover on this sol. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required sol Union[int, str] The sol when photo was captured. required camera Optional[Union[Camera, str]] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Returns: Type Description Optional[List[Photo]] A list of Photo objects with url and info. get_raw_response ( self , path , ** queries ) + Gets a Serializer containing Response of request made to API using path and queries . Parameters: Name Type Description Default path str The url path. required queries Mapping[str, str] The endpoint to which call is to be made. {} Returns: Type Description Optional[Serializer] A Serializer object.","title":"SyncClient"},{"location":"API-Reference/syncclient/#marsworks.syncclient.SyncClient.__init__","text":"SyncClient Constructor. Use AsyncClient for async requests. Parameters: Name Type Description Default api_key Optional[str] NASA API key . (optional) None session Optional[httpx.Client] A Client object. (optional) None suppress_warnings bool Whether to suppress warnings. False Info When api_key is not passed or it is DEMO_KEY a warning is sent. To suppress it suppress_warnings must be set to True explicitly. Hint For name and camera param. of this class's instance methods you can pass enums Rover and Camera . You can also pass args as string.","title":"__init__()"},{"location":"API-Reference/syncclient/#marsworks.syncclient.SyncClient.close","text":"Closes the SyncClient. Warning It can close user given Client session too.","title":"close()"},{"location":"API-Reference/syncclient/#marsworks.syncclient.SyncClient.get_latest_photo","text":"Gets the latest photos taken by this rover. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required camera Optional[Union[Camera, str]] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Returns: Type Description Optional[List[Photo]] A list of Photo objects with url and info.","title":"get_latest_photo()"},{"location":"API-Reference/syncclient/#marsworks.syncclient.SyncClient.get_mission_manifest","text":"Gets the mission manifest of this rover. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required Returns: Type Description Optional[Manifest] A Manifest object containing mission's info.","title":"get_mission_manifest()"},{"location":"API-Reference/syncclient/#marsworks.syncclient.SyncClient.get_photo_by_earthdate","text":"Gets the photos taken by this rover on this date. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required earth_date Union[str, datetime.date] A datetime.date object or date in string form in YYYY-MM-DD format. required camera Optional[Union[Camera, str]] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Returns: Type Description Optional[List[Photo]] A list of Photo objects with url and info.","title":"get_photo_by_earthdate()"},{"location":"API-Reference/syncclient/#marsworks.syncclient.SyncClient.get_photo_by_sol","text":"Gets the photos taken by this rover on this sol. Parameters: Name Type Description Default name Union[str, Rover] Name of rover. required sol Union[int, str] The sol when photo was captured. required camera Optional[Union[Camera, str]] Camera with which photo is taken. (Optional) None page Optional[int] The page number to look for. (25 items per page are returned) None Returns: Type Description Optional[List[Photo]] A list of Photo objects with url and info.","title":"get_photo_by_sol()"},{"location":"API-Reference/syncclient/#marsworks.syncclient.SyncClient.get_raw_response","text":"Gets a Serializer containing Response of request made to API using path and queries . Parameters: Name Type Description Default path str The url path. required queries Mapping[str, str] The endpoint to which call is to be made. {} Returns: Type Description Optional[Serializer] A Serializer object.","title":"get_raw_response()"},{"location":"API-Reference/Enums/camera/","text":"Curiosity, Opportunity, Spirit Cameras. (The tick mark represent that this rover has this camera) Name Value Description Curiosity Opportunity Spirit FHAZ FHAZ Front Hazard Avoidance Camera \u2714 \u2714 \u2714 RHAZ RHAZ Rear Hazard Avoidance Camera \u2714 \u2714 \u2714 MAST MAST Mast Camera \u2714 CHEMCAM CHEMCAM Chemistry and Camera Complex \u2714 MAHLI MAHLI Mars Hand Lens Imager \u2714 MARDI MARDI Mars Descent Imager \u2714 NAVCAM NAVCAM Navigation Camera \u2714 \u2714 \u2714 PANCAM PANCAM Panoramic Camera \u2714 \u2714 MINITES MINITES Miniature Thermal Emission Spectrometer (Mini-TES) \u2714 \u2714 Perseverance Cameras Name Value Description EDL_RUCAM EDL_RUCAM Rover-UpLook Camera EDL_RDCAM EDL_RDCAM Rover Down-Look Camera EDL_DDCAM EDL_DDCAM Descent Stage Down-Look Camera EDL_PUCAM1 EDL_PUCAM1 Parachute Up-Look Camera A EDL_PUCAM2 EDL_PUCAM2 Parachute Up-Look Camera B NAVCAM_LEFT NAVCAM_LEFT Navigation Camera - Left NAVCAM_RIGHT NAVCAM_RIGHT Navigation Camera - Right MCZ_RIGHT MCZ_RIGHT Mast Camera Zoom - Right MCZ_LEFT MCZ_LEFT Mast Camera Zoom - Left FRONT_HAZCAM_LEFT_A FRONT_HAZCAM_LEFT_A Front Hazard Avoidance Camera - Left FRONT_HAZCAM_RIGHT_A FRONT_HAZCAM_RIGHT_A Front Hazard Avoidance Camera - Right REAR_HAZCAM_LEFT REAR_HAZCAM_LEFT Rear Hazard Avoidance Camera - Left REAR_HAZCAM_RIGHT REAR_HAZCAM_RIGHT Rear Hazard Avoidance Camera - Right SKYCAM SKYCAM MEDA Skycam SHERLOC_WATSON SHERLOC_WATSON SHERLOC WATSON Camera SUPERCAM_RMI SUPERCAM_RMI SuperCam Remote Micro Imager LCAM LCAM Lander Vision System Camera","title":"Camera"},{"location":"API-Reference/Enums/rover/","text":"An Enum class. Name Value Description CURIOSITY CURIOSITY Mars Science Laboratory mission, Curiosity. OPPORTUNITY OPPORTUNITY Mars Exploration Rover \u2013 B, Opportunity. SPIRIT SPIRIT Mars Exploration Rover \u2013 A, Spirit. PERSEVERANCE PERSEVERANCE Mars 2020 Rover, Perseverance.","title":"Rover"}]}